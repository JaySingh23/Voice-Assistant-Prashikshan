import speech_recognition as sr
import time
import playsound
import os
from datetime import datetime
from gtts import gTTS
import pyowm
import random

r=sr.recognizer

def record_audio():
    with sr.Microphone() as source:
         audio=r.listen(source)
    voice_data=""
try:
    voice_data=r.recognize_google(audio)
except sr.UnKnownValueError():
    jarvis_speak("Sorry, I didn't get that")
except sr.RequestError():
    jarvis_speak("sorry,my speech source is down")
    return voice_data.lower()

 #get string and make an audio file to be played
def jarvis_speak (audio_string):
                tts=gTTS(text=audio_string,lang='en')
                r=random.randint(1,20000000)
                audio_file='audio'+ str(r)+ '.mp3'
                tts.save(audio_file)
                playsound.playsound(audio_file)
                print(audio_string)
                os.remove(audio_file)

def respond(voice_data):
                if'hello jarvis' in voice_data:
                    hour=datetime.datetime.now().hour
                    if(1<hour<12):
                                  jarvis_speak("Hello Sir,Good Morning")
                    if(12<hour<18):
                                   jarvis_speak("Hello Sir,Good Afternoon")
                    else:
                                   jarvis_speak("Hello Sir,Good Evening")
            


 if'What is the time' in voice_data: 
                                    jarvis_speak("The time is{datetime.datetime.now().time()}")
if'What is the temperature' in voice_data:
                                          owm=pyowm.OWM('fbd809cf1ce1e52e6c15b0da360313c7')
                                          sf=owm.weather_at_place('Rourkela,India')
 weather=sf.get.weather()
 jarvis_speak(“The temperature here is {weather.get_temperature(“Celsius”)[“temp”]} “degree Celsius”)

         
            

if'shutdown jarvis' in voice_data:
                jarvis_speak("going offline")
                exit()
                
                time.sleep(1)
                while(1);
                voice_data=record_audio()
                respond(voice_data)
                

                       

        
        


